package slex
include "vector"
include "iostream"
include "string"
link "stdc++"

# DATA TYPES

class Vector<T>:
    hpp "std::vector<T> _vector;"
    
    def push(T element):
        cpp "this->_vector.push_back(l_element);"
    
    def len(): i32
        cpp "return this->_vector.size();"
    
    def at(i32 index): T
        cpp "return this->_vector.at(l_index);"

hpp "typedef std::string cString;"

@header
class String:
    i8* c_str
    
    def size(): i32

# FUNCTIONS

def str<T>(T e): String
    cpp "return std::to_string(l_e);"

def print<T>(T c):
    cpp "std::cout << l_c;"

def println<T>(T c):
    cpp "std::cout << l_c << std::endl;"

def input<T>(): T
    String a
    T out
    cpp "std::cin >> l_out;"
    return out

def input<T, B>(B m): T
    cpp "std::cout << l_m;"
    T out
    cpp "std::cin >> l_out;"
    return out

def cast<T, B>(B i): T
    cpp "return (T) l_i;"